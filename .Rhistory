pred.mod4<-prediction(valid_pred[,2],test.set$Direction)
perf.mod4<- performance(pred.mod4,'auc',fpr.stop=1)
auc.mod4<-slot(perf.mod4,"y.values")[[1]]
legend("bottomright", legend=c(paste("AUC = ",round(auc.mod4, 2))), cex=0.8)
sessionInfo()
shiny::runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
runApp('School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
insurance <- read.csv("insurance.csv")
setwd("~/School/2022-2023/INFO 248/Final Project")
insurance <- read.csv("insurance.csv")
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
mod<-glm(charges~., data=insurance, family= "binomial")
View(insurance)
mod<-lm(charges~., data=insurance, family= "binomial")
summary(mod)
life.df <- read.csv('Life_Expectancy_Data.csv')
summary(life.df)
fit.vax <- lm(formula = Life_expectancy ~ HepatitisB + Diphtheria + Polio + Measles + HIV.AIDS, life.df)
summary(fit.vax)
fit.vax2 <- lm(Life_expectancy ~ Diphtheria + Polio + Measles + HIV.AIDS, life.df)
summary(fit.vax2)
fit.econ <- lm(formula = Life_expectancy ~ percentage_expenditure + Total_expenditure + Income_composition_of_resources, life.df)
summary(fit.econ)
par(mfrow=c(1,2))
hist(fit.vax2$residuals, prob = TRUE)
lines(density(fit.vax2$residuals))
qqnorm(y=fit.vax2$residuals)
qqline(y=fit.vax2$residuals, datax = FALSE)
par(mfrow=c(1,2))
hist(fit.econ$residuals, prob = TRUE)
lines(density(fit.econ$residuals))
qqnorm(y=fit.econ$residuals)
qqline(y=fit.econ$residuals, datax = FALSE)
data.size = nrow(life.df)
train.cutoff = round(0.8*data.size, digits=0)
# finish these two assignments:
train.data<- life.df[1:2350,]
test.data<- life.df[2351:2938,]
fit.vax.pred <- lm(formula = Life_expectancy ~ Measles + Diphtheria + Polio + HIV.AIDS, data=train.data)
fit.econ.pred <- lm(formula = Life_expectancy ~ percentage_expenditure + Total_expenditure + Income_composition_of_resources, data=train.data)
pred.vax <-predict (fit.vax.pred, test.data, interval="prediction", level=0.95)
pred.econ <-predict (fit.econ.pred, test.data, interval="prediction", level=0.95)
actual.values<-test.data$Life_expectancy
pred.vals.vax<-pred.vax[,1]
pred.vals.econ<-pred.econ[,1]
sqrt(mean((actual.values - pred.vals.vax)^2, na.rm = TRUE))
sqrt(mean((actual.values - pred.vals.econ)^2, na.rm = TRUE))
mod<-lm(charges~., data=insurance)
summary(mod)
mod<-lm(charges~age + bmi + children + smokeryes, data=insurance, family= "binomial")
mod<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(mod)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
library(ROCR)
library(ROSE)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
mod<-lm(charges~., data=insurance)
summary(mod)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
lines(density(sigFac$residuals))
qqnorm(y=sigFac$residuals)
qqline(y=sigFac$residuals, datax = FALSE)
insurance.scaled <- scale(insurance[-1])
insurance.scaled <- scale(insurance$charges[-1])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance)
insurance.scaled <- scale(insurance[-1])
insurance.scaled <- scale(insurance$bmi[-1])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance$bmi)
insurance.scaled <- scale(insurance$age[-1])
insurance.scaled <- scale(insurance$age[-1])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance$bmi + insurance$age)
insurance.scaled <- scale(insurance$age)
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance$bmi + insurance$age)
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance$bmi)
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insurance.scaled <- scale(insurance$bmi)
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
insuranceAge.scaled <- scale(insurance$age)
for(i in 1:ncol(insuranceAge.scaled)){
print(max(insuranceAge.scaled[ , i]))
}
library(NbClust)
library(mclust)
library(flexclust)
library(cluster)
library(fpc)
seed.val<-1234
wine.data <- read.csv("wine_cultivar_data.csv")
wine.data$Cultivar <- factor(wine.data$Cultivar)
summary(wine.data$Cultivar)
wine.data <- wine.data[complete.cases(wine.data),]
wine.data.scaled <- scale(wine.data[-1])
for(i in 1:ncol(wine.data.scaled)){
print(max(wine.data.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
fit.km8 <- kmeans(wine.data.scaled, 8, nstart = 25)
fit.km8$size
fit.km8$tot.withinss
fit.km8$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(wine.data.scaled)
RNGversion("4.1.2")
set.seed(seed.val)
fit.km3 <- kmeans(wine.data.scaled, 3, nstart = 25)
fit.km3$size
fit.km3$tot.withinss
fit.km3$betweenss
RNGversion("4.1.2")
set.seed(seed.val)
# using k=4
fit.km4 <- kmeans(wine.data.scaled, 4, nstart = 25)
fit.km4$size
fit.km4$tot.withinss
fit.km4$betweenss
RNGversion("4.1.2")
set.seed(seed.val)
# using k=5
fit.km5 <- kmeans(wine.data.scaled, 5, nstart = 25)
fit.km5$size
fit.km5$tot.withinss
fit.km5$betweenss
plotcluster(wine.data.scaled, fit.km3$cluster)
plotcluster(wine.data.scaled, fit.km5$cluster)
nc <- NbClust(wine.data.scaled, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
cont.table <- table(wine.data$Cultivar, fit.km3$cluster)
cont.table
print(chisq.test(cont.table))
randIndex(cont.table)
dist.mat<-daisy(wine.data.scaled,  metric="euclidean")
pk <- pamk(dist.mat, krange=2:15, usepam=TRUE, diss=TRUE)
pk$nc
fit.pam = pam(dist.mat,3)
plot(fit.pam)
plot.new()
clusplot(fit.pam)
wine.cluster <- Mclust(wine.data.scaled)
summary(wine.cluster)
plot(wine.cluster, data=wine.data.scaled, what="BIC")
wine.pc <- princomp(wine.data.scaled, cor=T)
my.color.vector <- rep("blue", times=nrow(wine.data.scaled))
my.color.vector[wine.cluster$classification==2] <- "red"
my.color.vector[wine.cluster$classification==3] <- "green"
my.color.vector[wine.cluster$classification==4] <- "orange"
plot(wine.pc$scores[,1], wine.pc$scores[,2], ylim=range(wine.pc$scores[,1]),
xlab="PC 1", ylab="PC 2", type ='n', lwd=2)
text(wine.pc$scores[,1], wine.pc$scores[,2], labels=wine.data$Cultivar,
cex=0.7, lwd=2, col=my.color.vector)
#dimension reduction for visualization
model.dr <- MclustDR(wine.cluster)
plot(model.dr, what = "contour")
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance$bmi <- as.numeric(insurance$bmi)
seed.val<-1234
wine.data.scaled <- scale(wine.data[0:6])
seed.val<-1234
insurance.scaled <- scale(insurance[0:6])
seed.val<-1234
insurance.scaled <- scale(insurance[0,2])
seed.val<-1234
insurance.scaled <- scale(insurance[0] + insurance[2])
seed.val<-1234
insurance.scaled <- scale(insurance[1] + insurance[3])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 8, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
nc <- NbClust(insurance.scaled, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
plot.new()
clusplot(clusterInsurance)
plot.new()
clusplot(clusterInsurance$charges)
dist.mat<-daisy(insurance.scaled,  metric="euclidean")
pk <- pamk(dist.mat, krange=2:15, usepam=TRUE, diss=TRUE)
pk$nc
fit.pam = pam(dist.mat,2)
plot.new()
clusplot(clusterInsurance)
dist.mat<-daisy(insurance.scaled,  metric="euclidean")
pk <- pamk(dist.mat, krange=2:15, usepam=TRUE, diss=TRUE)
pk$nc
fit.pam = pam(dist.mat,2)
plot(fit.pam)
plot.new()
clusplot(clusterInsurance)
fit.pam = pam(dist.mat,2)
plot(fit.pam)
plot.new()
clusplot(clusterInsurance)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance$bmi <- as.numeric(insurance$bmi)
mod<-lm(charges~., data=insurance)
summary(mod)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
lines(density(sigFac$residuals))
qqnorm(y=sigFac$residuals)
qqline(y=sigFac$residuals, datax = FALSE)
seed.val<-1234
insurance.scaled <- scale(insurance[1] + insurance[3])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 8, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
library(NbClust)
library(mclust)
library(flexclust)
library(cluster)
library(fpc)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance$bmi <- as.numeric(insurance$bmi)
mod<-lm(charges~., data=insurance)
summary(mod)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
lines(density(sigFac$residuals))
qqnorm(y=sigFac$residuals)
qqline(y=sigFac$residuals, datax = FALSE)
seed.val<-1234
insurance.scaled <- scale(insurance[1] + insurance[3])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 8, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
nc <- NbClust(insurance.scaled, min.nc=2, max.nc=15, method="kmeans")
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 2, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
fit.pam = pam(dist.mat,2)
plot(fit.pam)
plot.new()
clusplot(clusterInsurance)
fit.pam = pam(dist.mat,2)
plot(fit.pam)
cont.table <- table(insurance$charges, clusterInsurance$cluster)
cont.table
print(chisq.test(cont.table))
randIndex(cont.table)
cont.table <- table(insurance$charges, clusterInsurance$cluster)
print(chisq.test(cont.table))
fit.pam = pam(dist.mat,2)
plot(fit.pam)
jpeg("MYPLOT.jpg")
plot(fit.pam)
dev.off()
library(NbClust)
library(mclust)
library(flexclust)
library(cluster)
library(fpc)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance$bmi <- as.numeric(insurance$bmi)
mod<-lm(charges~., data=insurance)
summary(mod)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
lines(density(sigFac$residuals))
qqnorm(y=sigFac$residuals)
qqline(y=sigFac$residuals, datax = FALSE)
seed.val<-1234
insurance.scaled <- scale(insurance[1] + insurance[3])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 2, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
nc <- NbClust(insurance.scaled, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
dist.mat<-daisy(insurance.scaled,  metric="euclidean")
pk <- pamk(dist.mat, krange=2:15, usepam=TRUE, diss=TRUE)
pk$nc
fit.pam = pam(dist.mat,2)
plot(fit.pam)
jpeg("MYPLOT.jpg")
plot(fit.pam)
dev.off()
cont.table <- table(insurance$charges, clusterInsurance$cluster)
print(chisq.test(cont.table))
randIndex(cont.table)
shiny::runApp('~/School/2022-2023/INFO 248/R Coding Files/Lab-shiny app starter')
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, title = "Finding Optimal Number of Clusters using Within Group Sum of Squares", type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, main = "Finding Optimal Number of Clusters using Within Group Sum of Squares", type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
title("Graphical Representation of Clusters")
cont.table <- table(insurance$charges, clusterInsurance$cluster)
print(chisq.test(cont.table))
par(mfrow=c(1,2))
hist(mod$residuals, prob = TRUE)
lines(density(mod$residuals))
qqnorm(y=mod$residuals)
qqline(y=mod$residuals, datax = FALSE)
library(NbClust)
library(mclust)
library(flexclust)
library(cluster)
library(fpc)
insurance <- read.csv("insurance.csv")
insurance <- na.omit(insurance)
insurance$age <- as.numeric(insurance$age)
insurance$bmi <- as.numeric(insurance$bmi)
mod<-lm(charges~., data=insurance)
summary(mod)
par(mfrow=c(1,2))
hist(mod$residuals, prob = TRUE)
lines(density(mod$residuals))
qqnorm(y=mod$residuals)
qqline(y=mod$residuals, datax = FALSE)
sigFac<-lm(charges~age + bmi + children + smoker, data=insurance)
summary(sigFac)
par(mfrow=c(1,2))
hist(sigFac$residuals, prob = TRUE)
lines(density(sigFac$residuals))
qqnorm(y=sigFac$residuals)
qqline(y=sigFac$residuals, datax = FALSE)
seed.val<-1234
insurance.scaled <- scale(insurance[1] + insurance[3])
for(i in 1:ncol(insurance.scaled)){
print(max(insurance.scaled[ , i]))
}
RNGversion("4.1.2")
set.seed(seed.val)
clusterInsurance <- kmeans(insurance.scaled, 2, nstart = 25)
clusterInsurance$size
clusterInsurance$tot.withinss
clusterInsurance$betweenss
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, main = "Finding Optimal Number of Clusters using Within Group Sum of Squares", type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
wssplot(insurance.scaled)
plotcluster(insurance.scaled, clusterInsurance$cluster)
title("Graphical Representation of Clusters")
dist.mat<-daisy(insurance.scaled,  metric="euclidean")
pk <- pamk(dist.mat, krange=2:15, usepam=TRUE, diss=TRUE)
pk$nc
fit.pam = pam(dist.mat,2)
plot(fit.pam)
jpeg("MYPLOT.jpg")
plot(fit.pam)
dev.off()
cont.table <- table(insurance$charges, clusterInsurance$cluster)
print(chisq.test(cont.table))
randIndex(cont.table)
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting Health Insurance Costs.Rmd")
setwd("~/GitHub/INFO-248-Final-Project")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting Health Insurance Costs.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting Health Insurance Costs.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting Health Insurance Costs.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting_Health_Insurance_Costs.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/Predicting_Health_Insurance_Costs.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/PredictingHealthInsuranceCosts.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/PredictingHealthInsuranceCosts.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/PredictingHealthInsuranceCosts.Rmd")
source("C:/Users/Zara/Documents/GitHub/INFO-248-Final-Project/PredictingHealthInsuranceCosts.Rmd")
